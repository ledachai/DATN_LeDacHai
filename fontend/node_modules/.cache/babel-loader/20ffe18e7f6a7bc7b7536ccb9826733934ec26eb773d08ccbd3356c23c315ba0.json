{"ast":null,"code":"var _jsxFileName = \"H:\\\\MonHoc\\\\DATN\\\\BackEnd\\\\NhanVienBE\\\\src\\\\Components\\\\Guest\\\\Category.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n// import FormAccount from \"./FormAccount\";\nimport CategoryList from \"./CategoryList\";\nimport Swal from \"sweetalert2\";\n//import AccountEditForm from \"./AccountEditForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Account extends Component {\n  constructor() {\n    super();\n    this.postData = () => {\n      //let config = this.getConfigToken();\n      //let isInsertSuccess\n      axios.post(this.state.defaultUrl, {\n        cate_Name: this.state.cate_Name,\n        sdt: this.state.soDienThoai,\n        tenDangNhap: this.state.tenDangNhap,\n        matKhau: this.state.password\n      }).then(response => {\n        if (response.data) {\n          Swal.fire('Thêm thành công!', 'Thay đổi đã xảy ra', 'success');\n        } else {\n          Swal.fire('Không thể thực hiện thêm!', 'Đã xảy ra một vấn đề nào đó', 'warning');\n        }\n      }).catch(error => {\n        Swal.fire('Không thể thực hiện thêm!', 'Đã xảy ra một vấn đề nào đó', 'warning');\n      });\n      this.clearInsertText();\n      this.componentDidMount();\n      this.renderFormAccount();\n    };\n    this.renderCategory = () => {\n      return this.state.Categories.map((data, index) => {\n        // if(data.role !== \"admin\"){\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.cate_Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.cate_Descibe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.cate_Count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            class: \"actions\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"update\",\n                commandtype: \"update\",\n                onClick: () => this.openEditFormAccount(data),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa-solid fa-pen-to-square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, data.cate_ID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this);\n        // }\n      });\n    };\n    this.state = {\n      Categories: [],\n      // showFormAccount: false,\n      // showListAccount: true,\n      // for post\n      cate_Name: '',\n      cate_Descibe: '',\n      cate_Count: '',\n      // for put\n      // showEditFormAccount: false,\n      // TKIDToEdit: '',\n\n      // for delete\n      // TKIDToDelete: \"\",\n\n      defaultUrl: \"https://localhost:5001/api/V1/Category\"\n    };\n  }\n  // getConfigToken() {\n  //     let config = {\n  //         headers: {\n  //             \"Authorization\": 'Bearer ' + localStorage.getItem(\"Token\"),\n  //             \"Content-type\": \"application/json\"\n  //         }\n  //     };\n  //     return config;\n  // }\n\n  componentDidMount() {\n    //let config = this.getConfigToken();\n    axios.get(this.state.defaultUrl).then(response => {\n      this.setState({\n        Categories: response.data\n      });\n    });\n  }\n\n  // FOR POST\n\n  // clearInsertText = () => {\n  //     this.setState({\n  //         hoTen: \"\",\n  //         soDienThoai: \"\",\n  //         tenDangNhap: \"\",\n  //         password: \"\",\n  //         vaiTro: \"\",\n  //     });\n  // };\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(CategoryList, {\n        renderCategory: this.renderCategory,\n        showListAccount: this.state.showListAccount,\n        renderFormAccount: this.renderFormAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Account;","map":{"version":3,"names":["React","Component","axios","CategoryList","Swal","Account","constructor","postData","post","state","defaultUrl","cate_Name","sdt","soDienThoai","tenDangNhap","matKhau","password","then","response","data","fire","catch","error","clearInsertText","componentDidMount","renderFormAccount","renderCategory","Categories","map","index","cate_Descibe","cate_Count","openEditFormAccount","cate_ID","get","setState","render","showListAccount"],"sources":["H:/MonHoc/DATN/BackEnd/NhanVienBE/src/Components/Guest/Category.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n// import FormAccount from \"./FormAccount\";\nimport CategoryList from \"./CategoryList\";\nimport Swal from \"sweetalert2\";\n//import AccountEditForm from \"./AccountEditForm\";\n\n\nclass Account extends Component {\n    constructor() {\n        super();\n        this.state = {\n            Categories: [],\n            // showFormAccount: false,\n            // showListAccount: true,\n            // for post\n            cate_Name: '',\n            cate_Descibe: '',\n            cate_Count: '',\n\n            // for put\n            // showEditFormAccount: false,\n            // TKIDToEdit: '',\n\n            // for delete\n            // TKIDToDelete: \"\",\n\n            defaultUrl: \"https://localhost:5001/api/V1/Category\"\n        }\n    }\n    // getConfigToken() {\n    //     let config = {\n    //         headers: {\n    //             \"Authorization\": 'Bearer ' + localStorage.getItem(\"Token\"),\n    //             \"Content-type\": \"application/json\"\n    //         }\n    //     };\n    //     return config;\n    // }\n\n    componentDidMount() {\n        //let config = this.getConfigToken();\n        axios.get(this.state.defaultUrl)\n            .then((response) => {\n                this.setState({\n                    Categories: response.data\n                })\n            });\n    }\n\n    // FOR POST\n\n    // clearInsertText = () => {\n    //     this.setState({\n    //         hoTen: \"\",\n    //         soDienThoai: \"\",\n    //         tenDangNhap: \"\",\n    //         password: \"\",\n    //         vaiTro: \"\",\n    //     });\n    // };\n\n    postData = () => {\n        //let config = this.getConfigToken();\n        //let isInsertSuccess\n        axios\n            .post(this.state.defaultUrl, {\n                cate_Name: this.state.cate_Name,\n                sdt: this.state.soDienThoai,\n                tenDangNhap: this.state.tenDangNhap,\n                matKhau: this.state.password\n            })\n            .then(response => {\n                if (response.data) {\n                    Swal.fire(\n                        'Thêm thành công!',\n                        'Thay đổi đã xảy ra',\n                        'success'\n                    )\n                }\n                else {\n                    Swal.fire(\n                        'Không thể thực hiện thêm!',\n                        'Đã xảy ra một vấn đề nào đó',\n                        'warning'\n                    )\n                }\n            })\n            .catch(error => {\n                Swal.fire(\n                    'Không thể thực hiện thêm!',\n                    'Đã xảy ra một vấn đề nào đó',\n                    'warning'\n                )\n            });\n        this.clearInsertText();\n        this.componentDidMount();\n        this.renderFormAccount();\n    };\n\n\n    // handleFormHoTenChange = (value) => {\n    //     this.setState({\n    //         hoTen: value,\n    //     });\n    // };\n    // handleFormSoDienThoaiChange = (value) => {\n    //     this.setState({\n    //         soDienThoai: value,\n    //     });\n    // };\n    // handleFormTenDangNhapChange = (value) => {\n    //     this.setState({\n    //         tenDangNhap: value,\n    //     });\n    // };\n    // handleFormPasswordChange = (value) => {\n    //     this.setState({\n    //         password: value,\n    //     });\n    // };\n    // handleFormVaiTroChange = (value) => {\n    //     this.setState({\n    //         vaiTro: value,\n    //     });\n    // };\n\n\n    // renderFormAccount = () => {\n    //     this.setState({\n    //         showListAccount: !this.state.showListAccount,\n    //         showFormAccount: !this.state.showFormAccount,\n    //     })\n    //     this.clearInsertText();\n    // }\n\n    // FOR PUT\n    // openEditFormAccount = (data) => {\n    //     this.setState({\n    //         showListAccount: !this.state.showListAccount,\n    //         showEditFormAccount: !this.state.showEditFormAccount,\n    //         TKIDToEdit: data.tkid,\n    //         hoTen: data.hoten,\n    //         soDienThoai: data.sdt,\n    //         tenDangNhap: data.tenDangNhap,\n    //         password: data.matKhau,\n    //         vaiTro: data.role\n    //     })\n    // }\n\n    // closeEditFormAccount = () => {\n    //     this.setState({\n    //         showListAccount: !this.state.showListAccount,\n    //         showEditFormAccount: !this.state.showEditFormAccount,\n    //     })\n    //     this.clearInsertText();\n    // }\n\n    // putData = () => {\n    //     var url = this.state.defaultUrl;\n    //     let config = this.getConfigToken();\n    //     console.log(\"haha\")\n    //     //let isEditSuccess;\n    //     axios\n    //         .put(url, {\n    //             tkid: this.state.TKIDToEdit,\n    //             hoten: this.state.hoTen,\n    //             sdt: this.state.soDienThoai,\n    //             tenDangNhap: this.state.tenDangNhap,\n    //             matKhau: this.state.password,\n    //             role: \"Nhân Viên\",\n    //         }, config)\n    //         .then(response => {\n    //             if (response.data) {\n    //                 Swal.fire(\n    //                     'Sửa tài khoản thành công!',\n    //                     'Thay đổi đã xảy ra',\n    //                     'success'\n    //                 )\n    //             }\n    //             else {\n    //                 Swal.fire(\n    //                     'Không thể thực hiện sửa!',\n    //                     'Đã xảy ra một vấn đề nào đó',\n    //                     'warning'\n    //                 )\n    //             }\n    //         })\n    //         .catch(error => {\n    //             Swal.fire(\n    //                 'Không thể thực hiện sửa!!',\n    //                 'Đã xảy ra một vấn đề nào đó',\n    //                 'warning'\n    //             )\n    //             console.log(error)\n    //         });\n    //     //this.showUpdateResultAlert();\n    //     this.clearInsertText();\n    //     this.closeEditFormAccount();\n    //     this.componentDidMount();\n    // };\n\n\n    // FOR DELETE\n\n    // HTTP DELETE\n    // deleteAccount = (TKID) => {\n    //     var url = this.state.defaultUrl + \"/\" + TKID;\n    //     let config = this.getConfigToken();\n    //     axios\n    //         .delete(url, config)\n    //         .then(response => {\n    //             if (response.data) {\n    //                 Swal.fire(\n    //                     'Xóa thành công!',\n    //                     'Thay đổi đã xảy ra',\n    //                     'success'\n    //                 )\n    //             }\n    //             else {\n    //                 Swal.fire(\n    //                     'Không thể thực hiện xóa!',\n    //                     'Đã xảy ra một vấn đề nào đó',\n    //                     'success'\n    //                 )\n    //             }\n    //         })\n    //         .catch(error => {\n    //             Swal.fire(\n    //                 'Không thể thực hiện xóa!',\n    //                 'Đã xảy ra một vấn đề nào đó',\n    //                 'success'\n    //             )\n    //         });\n    //     this.componentDidMount();\n    // };\n\n\n    // showDeleteConfirmAlert = (data) => {\n    //     const swalWithBootstrapButtons = Swal.mixin({\n    //         customClass: {\n    //             confirmButton: 'btn btn-success',\n    //             cancelButton: 'btn btn-danger'\n    //         },\n    //         buttonsStyling: false\n    //     })\n    //     swalWithBootstrapButtons.fire({\n    //         title: 'Bạn có chắc chắn?',\n    //         text: \"Thao tác này có thể không hoàn tác được!\",\n    //         icon: 'warning',\n    //         showCancelButton: true,\n    //         confirmButtonText: 'Xoá!',\n    //         cancelButtonText: 'Không!',\n    //         reverseButtons: true\n    //     }).then((result) => {\n    //         if (result.isConfirmed) {\n    //             this.deleteAccount(data.tkid);\n    //             // end comfirmed\n    //         } else if (\n    //             /* Read more about handling dismissals below */\n    //             result.dismiss === Swal.DismissReason.cancel\n    //         ) {\n    //             swalWithBootstrapButtons.fire(\n    //                 'Cancelled',\n    //                 'Không có gì xảy ra',\n    //                 'success'\n    //             )\n    //         }\n    //     })\n    // }\n\n\n    // FOR DISPLAY LIST DATA\n    renderCategory = () => {\n        return this.state.Categories.map((data, index) => {\n            // if(data.role !== \"admin\"){\n                return (\n                    <tr key={data.cate_ID}>\n                        {/* <td>{data.cate_ID}</td> */}\n                        <td>{data.cate_Name}</td>\n                        <td>{data.cate_Descibe}</td>\n                        <td>{data.cate_Count}</td>\n                        <td class=\"actions\">\n                            <div className=\"flex_center\">\n                                <div className=\"update\" commandtype=\"update\" onClick={() => this.openEditFormAccount(data)}>\n                                    <i class=\"fa-solid fa-pen-to-square\"></i>\n                                </div>\n                            </div> \n                        </td>\n                    </tr>\n                );\n            // }\n        }\n        );\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <CategoryList\n                    renderCategory={this.renderCategory}\n                    showListAccount={this.state.showListAccount}\n                    renderFormAccount={this.renderFormAccount}\n                />\n                {/* <FormAccount\n                    showFormAccount={this.state.showFormAccount}\n                    renderFormAccount={this.renderFormAccount}\n                    handleFormHoTenChange={this.handleFormHoTenChange}\n                    handleFormSoDienThoaiChange={this.handleFormSoDienThoaiChange}\n                    handleFormTenDangNhapChange={this.handleFormTenDangNhapChange}\n                    handleFormPasswordChange={this.handleFormPasswordChange}\n                    handleFormVaiTroChange={this.handleFormVaiTroChange}\n                    hoTen={this.state.hoTen}\n                    soDienThoai={this.state.soDienThoai}\n                    tenDangNhap={this.state.tenDangNhap}\n                    password={this.state.password}\n                    vaiTro={this.state.vaiTro}\n                    postData={this.postData}\n                />\n                <AccountEditForm\n                    showEditFormAccount={this.state.showEditFormAccount}\n                    closeEditFormAccount={this.closeEditFormAccount}\n                    TKIDToEdit={this.state.TKIDToEdit}\n                    handleFormHoTenChange={this.handleFormHoTenChange}\n                    handleFormSoDienThoaiChange={this.handleFormSoDienThoaiChange}\n                    handleFormTenDangNhapChange={this.handleFormTenDangNhapChange}\n                    handleFormPasswordChange={this.handleFormPasswordChange}\n                    handleFormVaiTroChange={this.handleFormVaiTroChange}\n                    hoTen={this.state.hoTen}\n                    soDienThoai={this.state.soDienThoai}\n                    tenDangNhap={this.state.tenDangNhap}\n                    password={this.state.password}\n                    vaiTro={this.state.vaiTro}\n                    putData={this.putData}\n                /> */}\n            </div>\n        );\n    }\n}\nexport default Account;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}