{"ast":null,"code":"var _jsxFileName = \"H:\\\\MonHoc\\\\DATN\\\\DATN_LeDacHai\\\\fontend\\\\src\\\\Components\\\\Comment\\\\Comment.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CommentList from \"./CommentList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Comment extends Component {\n  constructor() {\n    var _this;\n    super();\n    _this = this;\n    this.componentDidMount = function () {\n      let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.defaultUrl;\n      _this.getData(url);\n    };\n    this.formatDate = dateSrc => {\n      let date = new Date(dateSrc),\n        year = date.getFullYear().toString(),\n        month = (date.getMonth() + 1).toString().padStart(2, '0'),\n        day = date.getDate().toString().padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    };\n    this.renderComment = () => {\n      return this.state.Comment.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.peo_Fullname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.pro_Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.pro_Image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.co_Content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.formatDate(data.co_Date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this);\n        // }\n      });\n    };\n    this.state = {\n      Comment: [],\n      defaultUrl: \"https://localhost:5001/api/V1/Comment\"\n    };\n  }\n  getConfigToken() {\n    let config = {\n      headers: {\n        \"Authorization\": 'Bearer ' + localStorage.getItem(\"Token\"),\n        \"Content-type\": \"application/json\"\n      }\n    };\n    return config;\n  }\n  getData(url) {\n    let config = this.getConfigToken();\n    axios.get(url, config).then(response => {\n      this.setState({\n        Comment: response.data\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(CommentList, {\n        renderComment: this.renderComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Comment;","map":{"version":3,"names":["React","Component","axios","CommentList","Comment","constructor","componentDidMount","url","state","defaultUrl","getData","formatDate","dateSrc","date","Date","year","getFullYear","toString","month","getMonth","padStart","day","getDate","renderComment","map","data","index","peo_Fullname","pro_Name","pro_Image","co_Content","co_Date","getConfigToken","config","headers","localStorage","getItem","get","then","response","setState","render"],"sources":["H:/MonHoc/DATN/DATN_LeDacHai/fontend/src/Components/Comment/Comment.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CommentList from \"./CommentList\";\r\n\r\nclass Comment extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Comment: [],\r\n            defaultUrl: \"https://localhost:5001/api/V1/Comment\"\r\n        }\r\n    }\r\n    getConfigToken() {\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\": 'Bearer ' + localStorage.getItem(\"Token\"),\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        };\r\n        return config;\r\n    }\r\n    \r\n    getData(url){\r\n        let config = this.getConfigToken();\r\n        axios.get(url, config)\r\n        .then((response) => {\r\n            this.setState({\r\n                Comment: response.data\r\n            })\r\n        });\r\n    }\r\n    componentDidMount = (url = this.state.defaultUrl) => {\r\n        this.getData(url);\r\n    }\r\n    formatDate = dateSrc => {\r\n        let date = new Date(dateSrc),\r\n            year = date.getFullYear().toString(),\r\n            month = (date.getMonth() + 1).toString().padStart(2, '0'),\r\n            day = date.getDate().toString().padStart(2, '0');\r\n\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n\r\n    // FOR DISPLAY LIST DATA\r\n    renderComment = () => {\r\n        return this.state.Comment.map((data, index) => {\r\n                return (\r\n                    <tr>\r\n                        <td>{data.peo_Fullname}</td>\r\n                        <td>{data.pro_Name}</td>\r\n                        <td>{data.pro_Image}</td>\r\n                        <td>{data.co_Content}</td>\r\n                        <td>{this.formatDate(data.co_Date)}</td>\r\n                    </tr>\r\n                );\r\n            // }\r\n        }\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <CommentList\r\n                    renderComment={this.renderComment}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Comment;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,MAAMC,OAAO,SAASH,SAAS,CAAC;EAC5BI,WAAW,GAAG;IAAA;IACV,KAAK,EAAE;IAAA;IAAA,KAyBXC,iBAAiB,GAAG,YAAiC;MAAA,IAAhCC,GAAG,uEAAG,KAAI,CAACC,KAAK,CAACC,UAAU;MAC5C,KAAI,CAACC,OAAO,CAACH,GAAG,CAAC;IACrB,CAAC;IAAA,KACDI,UAAU,GAAGC,OAAO,IAAI;MACpB,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;QACxBG,IAAI,GAAGF,IAAI,CAACG,WAAW,EAAE,CAACC,QAAQ,EAAE;QACpCC,KAAK,GAAG,CAACL,IAAI,CAACM,QAAQ,EAAE,GAAG,CAAC,EAAEF,QAAQ,EAAE,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QACzDC,GAAG,GAAGR,IAAI,CAACS,OAAO,EAAE,CAACL,QAAQ,EAAE,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAEpD,OAAQ,GAAEL,IAAK,IAAGG,KAAM,IAAGG,GAAI,EAAC;IACpC,CAAC;IAAA,KAGDE,aAAa,GAAG,MAAM;MAClB,OAAO,IAAI,CAACf,KAAK,CAACJ,OAAO,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACvC,oBACI;UAAA,wBACI;YAAA,UAAKD,IAAI,CAACE;UAAY;YAAA;YAAA;YAAA;UAAA,QAAM,eAC5B;YAAA,UAAKF,IAAI,CAACG;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAM,eACxB;YAAA,UAAKH,IAAI,CAACI;UAAS;YAAA;YAAA;YAAA;UAAA,QAAM,eACzB;YAAA,UAAKJ,IAAI,CAACK;UAAU;YAAA;YAAA;YAAA;UAAA,QAAM,eAC1B;YAAA,UAAK,IAAI,CAACnB,UAAU,CAACc,IAAI,CAACM,OAAO;UAAC;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QACvC;QAEb;MACJ,CAAC,CACA;IACL,CAAC;IAnDG,IAAI,CAACvB,KAAK,GAAG;MACTJ,OAAO,EAAE,EAAE;MACXK,UAAU,EAAE;IAChB,CAAC;EACL;EACAuB,cAAc,GAAG;IACb,IAAIC,MAAM,GAAG;MACTC,OAAO,EAAE;QACL,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D,cAAc,EAAE;MACpB;IACJ,CAAC;IACD,OAAOH,MAAM;EACjB;EAEAvB,OAAO,CAACH,GAAG,EAAC;IACR,IAAI0B,MAAM,GAAG,IAAI,CAACD,cAAc,EAAE;IAClC9B,KAAK,CAACmC,GAAG,CAAC9B,GAAG,EAAE0B,MAAM,CAAC,CACrBK,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACC,QAAQ,CAAC;QACVpC,OAAO,EAAEmC,QAAQ,CAACd;MACtB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EA6BAgB,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,WAAW;MAAA,uBACtB,QAAC,WAAW;QACR,aAAa,EAAE,IAAI,CAAClB;MAAc;QAAA;QAAA;QAAA;MAAA;IACpC;MAAA;MAAA;MAAA;IAAA,QACA;EAEd;AACJ;AACA,eAAenB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}